name: PR CI Pipeline

on:
  pull_request:
    branches: [ main ] 

jobs:
  lint:
    uses: ./.github/workflows/lint.yml

  api-tests:
    uses: ./.github/workflows/api-tests.yml
    with:
      environment: sandbox

  build-and-push:
    name: Build & Push
    runs-on: ubuntu-latest
    needs: [ lint, api-tests ]
    environment: shared
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Build API
        run: npm run build --workspace=@chips/api

      - name: Build Web
        run: npm run build --workspace=@chips/web
        env:
          VITE_API_URL: ${{ vars.VITE_API_URL }}

      - name: Generate image tag
        id: tag
        run: |
          TAG=$(npm run ci:calver --silent | tail -n 1)
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Debug OIDC token
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
              "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" | \
              jq -R 'split(".")[1] | @base64d | fromjson | {sub, aud, iss}'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Build and push images
        run: npm run ci:push-image --silent sandbox ${{ steps.tag.outputs.tag }}
        env:
          AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          ECR_API_REPO: ${{ vars.ECR_API_REPO }}
          ECR_WEB_REPO: ${{ vars.ECR_WEB_REPO }}
          VITE_API_URL: ${{ vars.VITE_API_URL }}